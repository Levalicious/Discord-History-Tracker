name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.2
        with:
          dotnet-version: '7.0.x'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get install -y python-is-python3 zip
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo npm install -g uglify-js

      - name: Build
        run: |
          chmod +x app/build.sh
          ./app/build.sh

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-linux
          path: app/bin/

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.2
        with:
          dotnet-version: '7.0.x'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Build
        run: app/build.bat

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-windows
          path: app/bin/

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-linux
          path: release/linux/
      - uses: actions/download-artifact@v3
        with:
          name: release-windows
          path: release/windows/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/linux/app/bin/
          asset_name: release-linux.zip
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/windows/app/bin/
          asset_name: release-windows.zip
          asset_content_type: application/zip
